name: Diff DBM test output
description: Runs DBM tests on two commits and uploads the resulting data to a GitHub artifact or the DBM-Test-Results main repo
branding:
  icon: book
  color: blue

inputs:
  dbm-offline-repo:
    default: DeadlyBossMods/DBM-Offline
  dbm-offline-ref:
    default: ""
  dbm-main-repo:
    default: DeadlyBossMods/DeadlyBossMods
  dbm-main-ref:
    default: ""
  dbm-main-base-ref:
    default: ""
  dbm-mod-repo-vanilla:
    default: "DeadlyBossMods/DBM-Vanilla"
  dbm-mod-ref-vanilla:
    default: ""
  dbm-mod-base-ref-vanilla:
    default: ""
  dbm-mod-repo-dungeons:
    default: "DeadlyBossMods/DBM-Dungeons"
  dbm-mod-ref-dungeons:
    default: ""
  dbm-mod-base-ref-dungeons:
    default: ""
  repo-under-test:
    default: ""
  test-dbm-core-mods:
    default: false
  test-dbm-vanilla-mods:
    default: false
  test-dbm-dungeon-mods:
    default: false
  upload-repo:
    default: "DeadlyBossMods/DBM-Test-Results"
    required: false
  upload-repo-branch:
    required: false
  upload-token:
    required: false
  upload-repo-commit-message:
    required: true
    default: "Test results"
  diff-mode:
    default: "true"

runs:
  using: composite
  steps:
    - name: Setup and DBM-Offline dependencies
      shell: bash
      run: |
        mkdir -p dbm-offline-diff
        export DEBIAN_FRONTEND=noninteractive
        sudo apt-get update
        sudo apt-get install -y lua5.1 luarocks subversion
        sudo luarocks --lua-version 5.1 install bitlib
        sudo luarocks --lua-version 5.1 install luafilesystem
    - name: Checkout DBM-Offline
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.dbm-offline-repo }}
        ref: ${{ inputs.dbm-offline-ref }}
        path: ./dbm-offline-diff/DBM-Offline
    - name: Checkout DBM main repo (New)
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.dbm-main-repo }}
        ref: ${{ inputs.dbm-main-ref }}
        path: ./dbm-offline-diff/DeadlyBossMods-new
    - name: Checkout DBM main repo (Base)
      if: ${{ inputs.diff-mode == 'true' }}
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.dbm-main-repo }}
        ref: ${{ inputs.dbm-main-base-ref }}
        path: ./dbm-offline-diff/DeadlyBossMods-base
    - name: Download DBM dependencies
      uses: BigWigsMods/packager@master
      with:
        args: -z -d -c -t ./dbm-offline-diff/DeadlyBossMods-new
    - name: Install DBM dependencies
      shell: bash
      run: |
        cp -r ./dbm-offline-diff/DeadlyBossMods-new/.release/DBM-Core/Libs ./dbm-offline-diff/DeadlyBossMods-new/DBM-Core/
        # FIXME: this is slightly incorrect and won't work if a dependency was removed
        if [[ -e ./dbm-offline-diff/DeadlyBossMods-base/DBM-Core/ ]]; then
          cp -r ./dbm-offline-diff/DeadlyBossMods-new/.release/DBM-Core/Libs ./dbm-offline-diff/DeadlyBossMods-base/DBM-Core/
        fi
    - name: Checkout DBM-Vanilla (New)
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.dbm-mod-repo-vanilla }}
        ref: ${{ inputs.dbm-mod-ref-vanilla }}
        path: ./dbm-offline-diff/DBM-Vanilla-new
    - name: Checkout DBM-Vanilla (Base)
      uses: actions/checkout@v4
      if: ${{ inputs.diff-mode == 'true' }}
      with:
        repository: ${{ inputs.dbm-mod-repo-vanilla }}
        ref: ${{ inputs.dbm-mod-base-ref-vanilla }}
        path: ./dbm-offline-diff/DBM-Vanilla-base
    - name: Checkout DBM-Dungeons (New)
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.dbm-mod-repo-dungeons }}
        ref: ${{ inputs.dbm-mod-ref-dungeons }}
        path: ./dbm-offline-diff/DBM-Dungeons-new
    - name: Checkout DBM-Dungeons (Base)
      uses: actions/checkout@v4
      if: ${{ inputs.diff-mode == 'true' }}
      with:
        repository: ${{ inputs.dbm-mod-repo-dungeons }}
        ref: ${{ inputs.dbm-mod-base-ref-dungeons }}
        path: ./dbm-offline-diff/DBM-Dungeons-base
    - name: Run tests (New)
      shell: bash
      run: |
        cd dbm-offline-diff/DBM-Offline
        for flavor in Retail SoD; do
          if [[ ${{ inputs.test-dbm-core-mods }} == true ]]; then
            lua5.1 main.lua --flavor $flavor --dbm ../DeadlyBossMods-new --mods ../DeadlyBossMods-new
          fi
          if [[ ${{ inputs.test-dbm-vanilla-mods }} == true ]]; then
            lua5.1 main.lua --flavor $flavor --dbm ../DeadlyBossMods-new --mods ../DBM-Vanilla-new
          fi
          if [[ ${{ inputs.test-dbm-dungeon-mods }} == true ]]; then
            lua5.1 main.lua --flavor $flavor --dbm ../DeadlyBossMods-new --mods ../DBM-Dungeons-new
          fi
        done
        mkdir -p ../results
        mv reports ../results/new
    - name: Run tests (Base)
      if: ${{ inputs.diff-mode == 'true' }}
      shell: bash
      run: |
        cd dbm-offline-diff/DBM-Offline
        for flavor in Retail SoD; do
          if [[ ${{ inputs.test-dbm-core-mods }} == true ]]; then
            lua5.1 main.lua --flavor $flavor --dbm ../DeadlyBossMods-base --mods ../DeadlyBossMods-base
          fi
          if [[ ${{ inputs.test-dbm-vanilla-mods }} == true ]]; then
            lua5.1 main.lua --flavor $flavor --dbm ../DeadlyBossMods-base --mods ../DBM-Vanilla-base
          fi
          if [[ ${{ inputs.test-dbm-dungeon-mods }} == true ]]; then
            lua5.1 main.lua --flavor $flavor --dbm ../DeadlyBossMods-base --mods ../DBM-Dungeons-base
          fi
        done
        mkdir -p ../results
        mv reports ../results/base
    - name: Create diff
      if: ${{ inputs.diff-mode == 'true' }}
      shell: bash
      run: |
        cd dbm-offline-diff/DBM-Offline
        lua5.1 diff.lua ../results/base ../results/new > ../summary.txt 2> ../diff-errors
        cd ..
        mkdir upload-results
        cd upload-results
        # TODO: this is a bit ugly
        echo ${{ github.event.number }} > pr.txt
        echo ${{ inputs.repo-under-test }} >> sut-flavor.txt
        echo ${{ inputs.dbm-main-repo }} >> core-repo.txt
        echo ${{ inputs.dbm-mod-repo-vanilla }} >> vanilla-repo.txt
        echo ${{ inputs.dbm-mod-repo-dungeons }} >> dungeons-repo.txt
        echo $(git -C ../DeadlyBossMods-base rev-parse HEAD) >> core-base.txt
        echo $(git -C ../DBM-Vanilla-base rev-parse HEAD) >> vanilla-base.txt
        echo $(git -C ../DBM-Dungeons-base rev-parse HEAD)>> dungeons-base.txt
        echo $(git -C ../DeadlyBossMods-new rev-parse HEAD) >> core-new.txt
        echo $(git -C ../DBM-Vanilla-new rev-parse HEAD) >> vanilla-new.txt
        echo $(git -C ../DBM-Dungeons-new rev-parse HEAD) >> dungeons-new.txt
        if [[ ${{ inputs.repo-under-test }} == core ]]; then
          cp core-base.txt sut-base.txt
          cp core-new.txt sut-head.txt
        fi
        if [[ ${{ inputs.repo-under-test }} == vanilla ]]; then
          cp vanilla-base.txt sut-base.txt
          cp vanilla-new.txt sut-head.txt
        fi
        if [[ ${{ inputs.repo-under-test }} == dungeons ]]; then
          cp dungeons-base.txt sut-base.txt
          cp dungeons-new.txt sut-head.txt
        fi
        cp ../summary.txt summary.txt
        mv ../results/base reports-base
        rm -f reports-base/.gitignore
        mv ../results/new reports-new
        rm -f reports-new/.gitignore
        cat summary.txt >> $GITHUB_STEP_SUMMARY
    - name: Upload diff
      if: ${{ inputs.diff-mode == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: dbm-offline-diff
        path: dbm-offline-diff/upload-results
        retention-days: 1
    - name: Upload test results
      if: ${{ inputs.diff-mode == 'false' }}
      shell: bash
      run: |
        cd dbm-offline-diff/
        git clone https://github.com/${{ inputs.upload-repo }} upload-results
        cd upload-results
        git checkout ${{ inputs.upload-repo-branch }}
        git config --global user.email "ci@deadlybossmods.com"
        git config --global user.name "DBM CI"
        # FIXME: should be using an exclude filter instead of that
        rm -rf Dragonflight-* SoD-* TWW-* Era-* Classic-* Cata-* TBC-*
        rm -f ../results/new/.gitignore
        cp -r ../results/new/* .
        git add *
        git commit --allow-empty -a -m "${{inputs.upload-repo-commit-message}}" \
          -m "Core: https://github.com/${{ inputs.dbm-main-repo }}/commit/$(git -C ../DeadlyBossMods-new rev-parse HEAD)" \
          -m "Vanilla: https://github.com/${{ inputs.dbm-mod-repo-vanilla }}/commit/$(git -C ../DBM-Vanilla-new rev-parse HEAD)" \
          -m "Dungeons: https://github.com/${{ inputs.dbm-mod-repo-dungeons }}/commit/$(git -C ../DBM-Dungeons-new rev-parse HEAD)"
        git push https://${gh_token}@github.com/${{ inputs.upload-repo }} ${{ inputs.upload-repo-branch }}
      env:
        gh_token: ${{ inputs.upload-token }}
    - name: Report diff errors
      shell: bash
      if: ${{ inputs.diff-mode == 'true' }}
      run: |
        if [[ -s dbm-offline-diff/diff-errors ]] ; then
          cat dbm-offline-diff/diff-errors
          exit 1
        fi
